{"ast":null,"code":"var _jsxFileName = \"/Users/anjidananto/Projects/ARDemoApps/sizer-app-poc/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport CameraComponent from \"./components/Camera\";\nimport PoseGuide from \"./components/PoseGuide\";\nimport Results from \"./components/Results\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [measurements, setMeasurements] = useState(null);\n  const [currentPose, setCurrentPose] = useState(null);\n  const [isMeasuring, setIsMeasuring] = useState(false);\n  const [userHeight, setUserHeight] = useState(null);\n  const [heightSubmitted, setHeightSubmitted] = useState(false);\n  const handleMeasurementResult = data => {\n    setMeasurements(data);\n    setIsMeasuring(false); // reset tombol\n  };\n  const handlePoseDetected = landmarks => {\n    setCurrentPose(landmarks);\n    if (isMeasuring) {\n      // Send to backend for measurement\n      const formattedLandmarks = landmarks.map(lm => ({\n        x: lm.x,\n        y: lm.y,\n        z: lm.z\n      }));\n      // ... (your existing backend call)\n    }\n  };\n  const handleUserHeightSubmit = e => {\n    e.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"WBH - Body Measurement POC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"guide-section\",\n        children: /*#__PURE__*/_jsxDEV(PoseGuide, {\n          currentPose: currentPose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"camera-section\",\n        children: [/*#__PURE__*/_jsxDEV(CameraComponent, {\n          onMeasurement: handleMeasurementResult,\n          onPoseDetected: handlePoseDetected,\n          isMeasuring: isMeasuring\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsMeasuring(!isMeasuring),\n          children: \"Force Measurement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Results, {\n      measurements: measurements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"afE2cS4Hsk80aeeV8of+umA0lgs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","CameraComponent","PoseGuide","Results","jsxDEV","_jsxDEV","App","_s","measurements","setMeasurements","currentPose","setCurrentPose","isMeasuring","setIsMeasuring","userHeight","setUserHeight","heightSubmitted","setHeightSubmitted","handleMeasurementResult","data","handlePoseDetected","landmarks","formattedLandmarks","map","lm","x","y","z","handleUserHeightSubmit","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onMeasurement","onPoseDetected","onClick","_c","$RefreshReg$"],"sources":["/Users/anjidananto/Projects/ARDemoApps/sizer-app-poc/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport CameraComponent from \"./components/Camera\";\nimport PoseGuide from \"./components/PoseGuide\";\nimport Results from \"./components/Results\";\nimport \"./styles.css\";\n\nfunction App() {\n  const [measurements, setMeasurements] = useState(null);\n  const [currentPose, setCurrentPose] = useState(null);\n  const [isMeasuring, setIsMeasuring] = useState(false);\n  const [userHeight, setUserHeight] = useState(null)\n  const [heightSubmitted, setHeightSubmitted] = useState(false)\n  const handleMeasurementResult = (data) => {\n        setMeasurements(data);\n        setIsMeasuring(false); // reset tombol\n      };\n\n\n  const handlePoseDetected = (landmarks) => {\n    setCurrentPose(landmarks);\n    if (isMeasuring) {\n      // Send to backend for measurement\n      const formattedLandmarks = landmarks.map(lm => ({\n        x: lm.x, y: lm.y, z: lm.z\n      }));\n      // ... (your existing backend call)\n    }\n  };\n\n  const handleUserHeightSubmit = (e) => {\n    e.preventDefault();\n    \n  }\n\n  return (\n    <div className=\"app\">\n      <h1>WBH - Body Measurement POC</h1>\n      <div className=\"container\">\n        <div className=\"guide-section\">\n          <PoseGuide currentPose={currentPose} />\n        </div>\n        <div className=\"camera-section\">\n          <CameraComponent \n            onMeasurement={handleMeasurementResult}\n            onPoseDetected={handlePoseDetected}\n            isMeasuring={isMeasuring}\n          />\n\n          {/* <button onClick={() => setIsMeasuring(!isMeasuring)}>\n            {isMeasuring ? \"Stop Measurement\" : \"Start Measurement\"}\n          </button> */}\n          <button \n          onClick={() => setIsMeasuring(!isMeasuring)} \n          >\n          Force Measurement\n          </button>\n        </div>\n      </div>\n      <Results measurements={measurements} />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}