{"ast":null,"code":"var _jsxFileName = \"/Users/anjidananto/Projects/ARDemoApps/sizer-app-poc/src/components/Camera.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { FilesetResolver, PoseLandmarker, DrawingUtils } from \"@mediapipe/tasks-vision\";\nimport Webcam from \"react-webcam\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CameraComponent = ({\n  onMeasurement,\n  onPoseDetected\n}) => {\n  _s();\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [poseLandmarker, setPoseLandmarker] = useState(null);\n  const [isCorrectPose, setIsCorrectPose] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    const init = async () => {\n      const vision = await FilesetResolver.forVisionTasks(\"https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@latest/wasm\");\n      const landmarker = await PoseLandmarker.createFromOptions(vision, {\n        baseOptions: {\n          modelAssetPath: `https://storage.googleapis.com/mediapipe-models/pose_landmarker/lite/float16/pose_landmarker_lite.task`,\n          delegate: \"GPU\"\n        },\n        runningMode: \"VIDEO\",\n        numPoses: 1\n      });\n      setPoseLandmarker(landmarker);\n    };\n    init();\n  }, []);\n  const sendToBackend = async landmarks => {\n    try {\n      setIsLoading(true);\n      const response = await fetch('http://localhost:5000/measure', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          landmarks: landmarks.map(lm => ({\n            x: lm.x,\n            y: lm.y,\n            z: lm.z\n          }))\n        })\n      });\n      if (!response.ok) throw new Error(await response.text());\n      const measurements = await response.json();\n      onMeasurement(measurements);\n    } catch (error) {\n      console.error(\"Measurement error:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const validatePose = landmarks => {\n    const leftShoulder = landmarks[11];\n    const rightShoulder = landmarks[12];\n    const diff = Math.abs(leftShoulder.y - rightShoulder.y);\n    const valid = diff < 0.05;\n    setIsCorrectPose(valid);\n    return valid;\n  };\n  useEffect(() => {\n    let animationFrame;\n    const renderLoop = async () => {\n      if (typeof webcamRef.current !== \"undefined\" && webcamRef.current !== null && webcamRef.current.video.readyState === 4 && poseLandmarker) {\n        const video = webcamRef.current.video;\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext(\"2d\");\n        canvas.width = video.videoWidth;\n        canvas.height = video.videoHeight;\n        const results = poseLandmarker.detectForVideo(video, performance.now());\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n        const drawingUtils = new DrawingUtils(ctx);\n        if (results.landmarks.length > 0) {\n          const landmarks = results.landmarks[0];\n\n          // draw skeleton\n          drawingUtils.drawLandmarks(landmarks, {\n            color: isCorrectPose ? \"#00FF00\" : \"#FF0000\",\n            radius: 4\n          });\n\n          // draw measurement points\n          const keypoints = [11, 12, 13, 14, 15, 16, 23, 24];\n          drawingUtils.drawLandmarks(landmarks.filter((_, i) => keypoints.includes(i)), {\n            color: \"#FFFF00\",\n            radius: 5\n          });\n\n          // Kirim pose ke parent\n          onPoseDetected(landmarks);\n\n          // Validasi & kirim ke backend\n          const valid = validatePose(landmarks);\n          if (valid && !isLoading) sendToBackend(landmarks);\n        }\n      }\n      animationFrame = requestAnimationFrame(renderLoop);\n    };\n    animationFrame = requestAnimationFrame(renderLoop);\n    return () => cancelAnimationFrame(animationFrame);\n  }, [poseLandmarker, isLoading, isCorrectPose]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"camera-container\",\n    style: {\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Webcam, {\n      ref: webcamRef,\n      mirrored: true,\n      style: {\n        width: \"100%\",\n        height: \"auto\",\n        position: \"relative\",\n        zIndex: 1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        zIndex: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Measuring...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s(CameraComponent, \"ojKhcue5S/ja5jZWwLcfg3oqbpo=\");\n_c = CameraComponent;\nexport default CameraComponent;\nvar _c;\n$RefreshReg$(_c, \"CameraComponent\");","map":{"version":3,"names":["React","useEffect","useRef","useState","FilesetResolver","PoseLandmarker","DrawingUtils","Webcam","jsxDEV","_jsxDEV","CameraComponent","onMeasurement","onPoseDetected","_s","webcamRef","canvasRef","poseLandmarker","setPoseLandmarker","isCorrectPose","setIsCorrectPose","isLoading","setIsLoading","init","vision","forVisionTasks","landmarker","createFromOptions","baseOptions","modelAssetPath","delegate","runningMode","numPoses","sendToBackend","landmarks","response","fetch","method","headers","body","JSON","stringify","map","lm","x","y","z","ok","Error","text","measurements","json","error","console","validatePose","leftShoulder","rightShoulder","diff","Math","abs","valid","animationFrame","renderLoop","current","video","readyState","canvas","ctx","getContext","width","videoWidth","height","videoHeight","results","detectForVideo","performance","now","clearRect","drawImage","drawingUtils","length","drawLandmarks","color","radius","keypoints","filter","_","i","includes","requestAnimationFrame","cancelAnimationFrame","className","style","position","children","ref","mirrored","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","top","left","_c","$RefreshReg$"],"sources":["/Users/anjidananto/Projects/ARDemoApps/sizer-app-poc/src/components/Camera.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { FilesetResolver, PoseLandmarker, DrawingUtils } from \"@mediapipe/tasks-vision\";\nimport Webcam from \"react-webcam\";\n\nconst CameraComponent = ({ onMeasurement, onPoseDetected }) => {\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [poseLandmarker, setPoseLandmarker] = useState(null);\n  const [isCorrectPose, setIsCorrectPose] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const init = async () => {\n      const vision = await FilesetResolver.forVisionTasks(\n        \"https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@latest/wasm\"\n      );\n\n      const landmarker = await PoseLandmarker.createFromOptions(vision, {\n        baseOptions: {\n          modelAssetPath: `https://storage.googleapis.com/mediapipe-models/pose_landmarker/lite/float16/pose_landmarker_lite.task`,\n          delegate: \"GPU\",\n        },\n        runningMode: \"VIDEO\",\n        numPoses: 1,\n      });\n\n      setPoseLandmarker(landmarker);\n    };\n\n    init();\n  }, []);\n\n  const sendToBackend = async (landmarks) => {\n    try {\n      setIsLoading(true);\n      const response = await fetch('http://localhost:5000/measure', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          landmarks: landmarks.map(lm => ({ x: lm.x, y: lm.y, z: lm.z }))\n        }),\n      });\n\n      if (!response.ok) throw new Error(await response.text());\n\n      const measurements = await response.json();\n      onMeasurement(measurements);\n    } catch (error) {\n      console.error(\"Measurement error:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const validatePose = (landmarks) => {\n    const leftShoulder = landmarks[11];\n    const rightShoulder = landmarks[12];\n    const diff = Math.abs(leftShoulder.y - rightShoulder.y);\n    const valid = diff < 0.05;\n    setIsCorrectPose(valid);\n    return valid;\n  };\n\n  useEffect(() => {\n    let animationFrame;\n\n    const renderLoop = async () => {\n      if (\n        typeof webcamRef.current !== \"undefined\" &&\n        webcamRef.current !== null &&\n        webcamRef.current.video.readyState === 4 &&\n        poseLandmarker\n      ) {\n        const video = webcamRef.current.video;\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext(\"2d\");\n\n        canvas.width = video.videoWidth;\n        canvas.height = video.videoHeight;\n\n        const results = poseLandmarker.detectForVideo(video, performance.now());\n\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n        const drawingUtils = new DrawingUtils(ctx);\n\n        if (results.landmarks.length > 0) {\n          const landmarks = results.landmarks[0];\n\n          // draw skeleton\n          drawingUtils.drawLandmarks(landmarks, {\n            color: isCorrectPose ? \"#00FF00\" : \"#FF0000\",\n            radius: 4,\n          });\n\n          // draw measurement points\n          const keypoints = [11, 12, 13, 14, 15, 16, 23, 24];\n          drawingUtils.drawLandmarks(\n            landmarks.filter((_, i) => keypoints.includes(i)),\n            { color: \"#FFFF00\", radius: 5 }\n          );\n\n          // Kirim pose ke parent\n          onPoseDetected(landmarks);\n\n          // Validasi & kirim ke backend\n          const valid = validatePose(landmarks);\n          if (valid && !isLoading) sendToBackend(landmarks);\n        }\n      }\n\n      animationFrame = requestAnimationFrame(renderLoop);\n    };\n\n    animationFrame = requestAnimationFrame(renderLoop);\n\n    return () => cancelAnimationFrame(animationFrame);\n  }, [poseLandmarker, isLoading, isCorrectPose]);\n\n  return (\n    <div className=\"camera-container\" style={{ position: \"relative\" }}>\n      <Webcam\n        ref={webcamRef}\n        mirrored\n        style={{ width: \"100%\", height: \"auto\", position: \"relative\", zIndex: 1 }}\n      />\n      <canvas\n        ref={canvasRef}\n        style={{\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          width: \"100%\",\n          height: \"100%\",\n          zIndex: 2,\n        }}\n      />\n      {isLoading && (\n        <div className=\"loading-overlay\">\n          <p>Measuring...</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CameraComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}